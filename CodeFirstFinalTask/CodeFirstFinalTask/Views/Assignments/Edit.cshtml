@model CodeFirstFinalTask.Models.Assignment

@{
    ViewBag.Title = "Edit";
}

<!-- Page Header -->
<div class="container mt-4">
    <h2 class="text-primary mb-4">Edit Assignment</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <!-- Form Container -->
        <div class="form-horizontal shadow-sm p-4 bg-white rounded">
            <h4 class="text-muted">Assignment Details</h4>
            <hr />

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <!-- Title Field -->
            <div class="form-group mb-3 row">
                @Html.LabelFor(model => model.Title, "Title", htmlAttributes: new { @class = "col-md-2 col-form-label text-md-end fw-bold" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- DueDate Field -->
            <div class="form-group mb-3 row">
                @Html.LabelFor(model => model.DueDate, "Due Date", htmlAttributes: new { @class = "col-md-2 col-form-label text-md-end fw-bold" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- ClassId Field -->
            <div class="form-group mb-3 row">
                @Html.LabelFor(model => model.ClassId, "Class ID", htmlAttributes: new { @class = "col-md-2 col-form-label text-md-end fw-bold" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ClassId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ClassId, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- Submit Button -->
            <div class="form-group row">
                <div class="col-md-10 offset-md-2">
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>
            </div>
        </div>
    }

    <!-- Back to List Link -->
    <div class="mt-3">
        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-outline-secondary" })
    </div>
</div>

<!-- Additional CSS -->
<style>
    /* General page styling */
    body {
        background-color: #f8f9fa;
    }

    /* Card styling for the form container */
    .form-horizontal {
        background-color: #fff;
        border-radius: 10px;
        border: 1px solid #dee2e6;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    /* Headings */
    h2 {
        font-family: 'Poppins', sans-serif;
        font-weight: bold;
    }

    h4 {
        font-family: 'Roboto', sans-serif;
        font-weight: normal;
    }

    /* Input styling */
    .form-control {
        border-radius: 8px;
        font-size: 1rem;
    }

    /* Button styles */
    .btn-primary {
        background-color: #007bff;
        border-color: #007bff;
        border-radius: 8px;
        padding: 0.75rem 1.25rem;
    }

    .btn-outline-secondary {
        border-radius: 8px;
        padding: 0.5rem 1rem;
        transition: background-color 0.3s ease;
    }

        /* Add a hover effect to buttons */
        .btn-outline-secondary:hover {
            background-color: #f0f0f0;
        }
</style>
